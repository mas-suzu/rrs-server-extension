*** rrscluster	2022-03-10 15:07:45.000000000 +0900
--- rrscluster.new	2022-03-10 15:07:45.000000000 +0900
***************
*** 544,554 ****
  #	$ssh->system("echo kernel.startup.connect-time: 10000 >> /var/tmp/robocup/S/tmp/${_map}/config/kernel.cfg");
  	print "[FINISH] Map file has uploaded\n";
  	print "[START] Simulation server will start for map creating\n";
! 	$ssh->system("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/S/roborescue/boot; ./start-comprun.sh -m ../../tmp/${_map}/map -c ../../tmp/${_map}/config 2>&1 ; ./kill.sh'");
  	print "[FINISH] Simulation server will start for map creating\n";
  	killall();
  	print "[START] Map image generating will start\n";
! 	$ssh->system("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/S/roborescue/boot; mkdir -p /var/tmp/robocup/S/tmp/extracts; ./logextract.sh ./logs/rescue.log /var/tmp/robocup/S/tmp/extracts'");
  	$ssh->scp_get("/var/tmp/robocup/S/tmp/extracts/init-score.txt", $_logdir);
  	$ssh->scp_get("/var/tmp/robocup/S/tmp/extracts/snapshot-final.png", $SCRIPTDIR."/../MAP/${_map}/preview.png");
  	$ssh->scp_get("/var/tmp/robocup/S/tmp/extracts/snapshot-init.png", $SCRIPTDIR."/../MAP/${_map}/preview.png");
--- 544,554 ----
  #	$ssh->system("echo kernel.startup.connect-time: 10000 >> /var/tmp/robocup/S/tmp/${_map}/config/kernel.cfg");
  	print "[FINISH] Map file has uploaded\n";
  	print "[START] Simulation server will start for map creating\n";
! 	$ssh->system("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/S/roborescue/scripts; ./start-comprun.sh -m ../../tmp/${_map}/map -c ../../tmp/${_map}/config 2>&1 ; ./kill.sh'");
  	print "[FINISH] Simulation server will start for map creating\n";
  	killall();
  	print "[START] Map image generating will start\n";
! 	$ssh->system("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/S/roborescue/scripts; mkdir -p /var/tmp/robocup/S/tmp/extracts; ./logextract.sh ../logs/log/rescue.log.xz /var/tmp/robocup/S/tmp/extracts'");
  	$ssh->scp_get("/var/tmp/robocup/S/tmp/extracts/init-score.txt", $_logdir);
  	$ssh->scp_get("/var/tmp/robocup/S/tmp/extracts/snapshot-final.png", $SCRIPTDIR."/../MAP/${_map}/preview.png");
  	$ssh->scp_get("/var/tmp/robocup/S/tmp/extracts/snapshot-init.png", $SCRIPTDIR."/../MAP/${_map}/preview.png");
***************
*** 657,663 ****
  
  	print $alias.": [START] Simulation server will start for precompute\n";
  	my $pid;
! 	($start_precompute_proc_rout, $pid) = $ssh->pipe_out("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/${alias}/roborescue/boot; ./start-precompute.sh -m ../../MAP/${_map}/map -c ../../MAP/${_map}/config 2>&1 ; ./kill.sh'") or
  	die "pipe_out method failed: " . $ssh->error;
  	while (<$start_precompute_proc_rout>)
  	{
--- 657,663 ----
  
  	print $alias.": [START] Simulation server will start for precompute\n";
  	my $pid;
! 	($start_precompute_proc_rout, $pid) = $ssh->pipe_out("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/${alias}/roborescue/scripts; ./start-precompute.sh -m ../../MAP/${_map}/map -c ../../MAP/${_map}/config 2>&1 ; ./kill.sh'") or
  	die "pipe_out method failed: " . $ssh->error;
  	while (<$start_precompute_proc_rout>)
  	{
***************
*** 698,704 ****
  	print $alias.": ".%$nodelist{$alias}->{"agent"}."\n";
  
  	print $alias.": [START] Agent will start for precompute\n";
! 	my ($rout, $pid) = $ssh->pipe_out("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/${alias}/AGENT/${agent}; timeout 120 bash ./precompute.sh $f 0 $p 0 $a 0 ${server_hostname} 2>&1 || echo TIMEOUTED'");
  	while (<$rout>)
  	{
  		print OUT $_;
--- 698,704 ----
  	print $alias.": ".%$nodelist{$alias}->{"agent"}."\n";
  
  	print $alias.": [START] Agent will start for precompute\n";
! 	my ($rout, $pid) = $ssh->pipe_out("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/${alias}/AGENT/${agent}; timeout 120 bash ./precompute.sh -t $f,0,$p,0,$a,0 -h ${server_hostname} 2>&1 || echo TIMEOUTED'");
  	while (<$rout>)
  	{
  		print OUT $_;
***************
*** 741,747 ****
  
  	print $alias.": [START] Simulation server will start for full running\n";
  	my $pid;
! 	($start_server_proc_rout, $pid) = $ssh->pipe_out("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/${alias}/roborescue/boot; ./start-comprun.sh -m ../../MAP/${_map}/map -c ../../MAP/${_map}/config 2>&1 ; ./kill.sh'") or
  	die "pipe_out method failed: " . $ssh->error;
  	while (<$start_server_proc_rout>)
  	{
--- 741,747 ----
  
  	print $alias.": [START] Simulation server will start for full running\n";
  	my $pid;
! 	($start_server_proc_rout, $pid) = $ssh->pipe_out("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/${alias}/roborescue/scripts; ./start-comprun.sh -m ../../MAP/${_map}/map -c ../../MAP/${_map}/config 2>&1 ; ./kill.sh'") or
  	die "pipe_out method failed: " . $ssh->error;
  	while (<$start_server_proc_rout>)
  	{
***************
*** 780,810 ****
  		if ( %$nodelist{$alias}->{"archiver"} eq "gzip")
  		{
  			$archive_ext = "tar.gz";
! 			$ssh->system("sh -c 'cd /var/tmp/robocup/${alias}/roborescue/boot; tar zcf ../../LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".tar.gz logs'");
  		}
  		elsif ( %$nodelist{$alias}->{"archiver"} eq "7zip")
  		{
  			$archive_ext = "7z";
! 			$ssh->system("sh -c 'cd /var/tmp/robocup/${alias}/roborescue/boot; 7za a -m0=lzma2 ../../LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".7z logs'");
  		}
  		elsif ( %$nodelist{$alias}->{"archiver"} eq "zip")
  		{
  			$archive_ext = "zip";
! 			$ssh->system("sh -c 'cd /var/tmp/robocup/${alias}/roborescue/boot; zip -r ../../LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".zip logs'");
  		}
  		$ssh->scp_get({recursive => 1, quiet => 1}, "/var/tmp/robocup/S/LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".".$archive_ext, $_logdir."simulation_log.".$archive_ext);
  	}
! 
! 	$ssh->system("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/S/roborescue/boot; mkdir -p /var/tmp/robocup/S/tmp/extracts; ./logextract.sh ./logs/rescue.log /var/tmp/robocup/S/tmp/extracts'");
  	$ssh->scp_get({recursive => 1, quiet => 1}, "/var/tmp/robocup/S/tmp/extracts", $_logdir."extracts");
  	open(OUT, ">$_logdir"."score.txt") or die "$!";
! 	my ($rout, $pid) = $ssh->pipe_out("sh -c 'cd /var/tmp/robocup/S/roborescue/boot; sh ./print-lastscore.sh'");
  	while (<$rout>)
  	{ print OUT $_; }
  	close(OUT);
  
  	open(OUT, ">$_logdir"."_output.json") or die "$!";
  	my $output_data->{"Score"} = 0 + &get_content($_logdir."extracts/final-score.txt");
  	print OUT encode_json($output_data);
  	close(OUT);
  
--- 780,812 ----
  		if ( %$nodelist{$alias}->{"archiver"} eq "gzip")
  		{
  			$archive_ext = "tar.gz";
! 			$ssh->system("sh -c 'cd /var/tmp/robocup/${alias}/roborescue/scripts; tar zcf ../../LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".tar.gz ../logs/log'");
  		}
  		elsif ( %$nodelist{$alias}->{"archiver"} eq "7zip")
  		{
  			$archive_ext = "7z";
! 			$ssh->system("sh -c 'cd /var/tmp/robocup/${alias}/roborescue/scripts; 7za a -m0=lzma2 ../../LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".7z ../logs/log'");
  		}
  		elsif ( %$nodelist{$alias}->{"archiver"} eq "zip")
  		{
  			$archive_ext = "zip";
! 			$ssh->system("sh -c 'cd /var/tmp/robocup/${alias}/roborescue/scripts; zip -r ../../LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".zip ../logs/log'");
  		}
  		$ssh->scp_get({recursive => 1, quiet => 1}, "/var/tmp/robocup/S/LOG/${datecode}-${_map}/${datecode}-${_map}-".%$nodelist{"F"}->{"agent"}."-".%$nodelist{"P"}->{"agent"}."-".%$nodelist{"A"}->{"agent"}.".".$archive_ext, $_logdir."simulation_log.".$archive_ext);
  	}
! 	
! 	$ssh->system("sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/S/roborescue/scripts; xz -dk ../logs/log/rescue.log.xz; mkdir -p /var/tmp/robocup/S/tmp/extracts; ./logextract.sh ../logs/log/rescue.log.xz /var/tmp/robocup/S/tmp/extracts'");
  	$ssh->scp_get({recursive => 1, quiet => 1}, "/var/tmp/robocup/S/tmp/extracts", $_logdir."extracts");
+ 	# $ssh->system("sh -c 'cd /var/tmp/robocup/S/roborescue/logs/log; grep -a \"Score:\" kernel.log | tail -n1 | cut -d \" \" -f5 > /var/tmp/robocup/S/tmp/extracts/score.txt'"); 
  	open(OUT, ">$_logdir"."score.txt") or die "$!";
! 	my ($rout, $pid) = $ssh->pipe_out("sh -c 'cd /var/tmp/robocup/S/roborescue/scripts; sh ./print-lastscore.sh'");
  	while (<$rout>)
  	{ print OUT $_; }
  	close(OUT);
  
  	open(OUT, ">$_logdir"."_output.json") or die "$!";
  	my $output_data->{"Score"} = 0 + &get_content($_logdir."extracts/final-score.txt");
+ 	# my $output_data->{"Score"} = 0 + $ssh->system("sh -c 'cd /var/tmp/robocup/S/roborescue/logs/log; grep -a \"Score:\" kernel.log | tail -n1 | cut -d \" \" -f5'");
  	print OUT encode_json($output_data);
  	close(OUT);
  
***************
*** 840,846 ****
  	$fh->autoflush;
  	print $alias.": [START] Agent will start for full running\n";
  	my (undef, $rout, undef, $pid) = $ssh->open_ex( { stderr_to_stdout => 1, stdin_pipe => 1, stdout_pipe => 1 },
! 		"echo $alias ; sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/".$alias."/AGENT/".$agent."; bash ./start.sh ".$f." ".$f." ".$p." ".$p." ".$a." ".$a." ".$server_hostname."'");
  	while (<$rout>)
  	{ print $fh $_; }
  	close($fh);
--- 842,848 ----
  	$fh->autoflush;
  	print $alias.": [START] Agent will start for full running\n";
  	my (undef, $rout, undef, $pid) = $ssh->open_ex( { stderr_to_stdout => 1, stdin_pipe => 1, stdout_pipe => 1 },
! 		"echo $alias ; sh -c 'export LC_ALL=en_US.UTF-8; export DISPLAY=:0.0; export AWT_FORCE_HEADFUL=true; cd /var/tmp/robocup/".$alias."/AGENT/".$agent."; bash ./start.sh -t $f,$f,$p,$p,$a,$a -h ${server_hostname}'");
  	while (<$rout>)
  	{ print $fh $_; }
  	close($fh);
